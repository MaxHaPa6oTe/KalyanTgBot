const { Op, Sequelize } = require('sequelize');
const Reservation = require('./models/Reservation');
const bot = require('./bot');
const moment = require('moment');
require('moment/locale/ru');
require('dotenv').config();

module.exports = (sequelize) => {
  return {
    startReminderService: async () => {
      console.log('üîî –°–µ—Ä–≤–∏—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞–ø—É—â–µ–Ω.');
      
      // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
      Reservation.afterCreate(async (reservation) => {
        try {
          const message = `‚úÖ –ù–æ–≤–∞—è –±—Ä–æ–Ω—å –Ω–∞ ${reservation.kolich} —á–µ–ª–æ–≤–µ–∫\n` +
            `${moment(reservation.data).format('D MMMM YYYY')} –≤ ${reservation.time.split(':').slice(0, 2).join(':')}\n`;
          await bot.sendMessage(process.env.TG_ID, message);
          // console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –±—Ä–æ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É`);
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –±—Ä–æ–Ω–∏:', error);
        }
      });

      // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏
      setInterval(async () => {
        try {
          const now = new Date();
          const oneHourLater = new Date(now.getTime() + 30 * 60 * 1000);
          const currentDate = moment(now).format('YYYY-MM-DD');
          const timePlus1Hour = moment(oneHourLater).format('HH:mm');

          const reservations = await Reservation.findAll({
            where: {
              [Op.and]: [
                sequelize.where(
                  sequelize.fn('date', sequelize.col('data')),
                  currentDate
                ),
                {
                  time: timePlus1Hour
                }
              ]
            }
          });

          for (const reservation of reservations) {
            try {
              const message = `üîî –ß–µ—Ä–µ–∑ 30 –º–∏–Ω –∫ –≤–∞–º –ø—Ä–∏–¥—É—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏!\n\n` +
                `<b>–°—Ç–æ–ª–∏–∫ –∑–∞–±—Ä–∞–Ω–∏—Ä–æ–≤–∞–ª ${reservation.ktoBron} –Ω–∞ ${reservation.kolich} —á–µ–ª–æ–≤–µ–∫,</b>\n` +
                `–Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏: ${reservation.phoneNumber}`;
              await bot.sendMessage(process.env.ADMIN_CHAT_ID, message);
            } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error.message);
            }
          }
        } catch (error) {
          console.error('üî• –û—à–∏–±–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', error);
        }
      }, 1 * 60 * 1000);
    }
  };
};